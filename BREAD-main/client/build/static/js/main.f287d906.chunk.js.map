{"version":3,"sources":["components/Input.tsx","hooks/useInputState.ts","components/Loading.tsx","assets/bread.png","assets/background.jpg","App.tsx","index.tsx"],"names":["Input","state","title","className","htmlFor","toLowerCase","type","id","value","onChange","handleChange","useInputState","init","initialState","useState","setValue","e","target","handleReset","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","height","width","options","App","React","basicSelected","setBasicSelected","loading","setLoading","data","setData","startLoading","endLoading","setURLs","Result","src","background","alt","logo","cn","active","onClick","Basic","Advanced","href","Volume","H_D","generateBasicModel","a","axios","post","volume","toString","h_d","res","files","BaffleLen","BaffleWid","Thickness","BaseThickness","ShaftDiameter","Baffle_count","Hub_Diameter","Hub_Height","Blade_Length","Blade_Angle","Blade_Thickness","Blade_Count","Num_Imp","generateAdvancedModel","baffleLen","baffleWid","thickness","baseThickness","shaftDiameter","baffle_count","hub_diameter","hub_height","blade_length","blade_angle","blade_thickness","blade_count","mum_imp","download","modelColor","backgroundColor","rotate","orbitControls","model","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f287d906.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\nimport { InputState } from \"../hooks/useInputState\";\n\ninterface Props {\n  state: InputState;\n  title: string;\n}\n\nexport default function Input({ state, title }: Props): ReactElement {\n  return (\n    <div className=\"input\">\n      <label htmlFor={title.toLowerCase()}>{title}</label>\n      <input\n        type=\"text\"\n        id={title.toLowerCase()}\n        value={state.value}\n        onChange={state.handleChange}\n        className=\"input\"\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nexport interface InputState {\n  value: string;\n  handleChange: (e: any) => void;\n  handleReset: () => void;\n}\n\nconst useInputState = (init?: string): InputState => {\n  const initialState = init || \"\";\n\n  const [value, setValue] = useState<string>(initialState);\n\n  const handleChange = (e: any): void => setValue(e.target.value);\n\n  const handleReset = (): void => setValue(initialState);\n\n  return { value, handleChange, handleReset };\n};\n\nexport default useInputState;\n","import React, { ReactElement } from \"react\";\nimport Lottie from \"react-lottie\";\nimport animation from \"../assets/loading.json\";\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: animation,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\",\n  },\n};\n\ninterface Props {\n  height?: number;\n  width?: number;\n}\n\nexport default function Loading({\n  height = 200,\n  width = 200,\n}: Props): ReactElement {\n  return (\n    <div>\n      <Lottie options={defaultOptions} height={height} width={width} />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/bread.21d139bf.png\";","export default __webpack_public_path__ + \"static/media/background.fad5fe5f.jpg\";","import React, { ReactElement, useState } from \"react\";\nimport cn from \"classnames\";\nimport Input from \"./components/Input\";\nimport useInputState from \"./hooks/useInputState\";\n//@ts-ignore\nimport STLViewer from \"stl-viewer\";\nimport axios from \"axios\";\nimport Loading from \"./components/Loading\";\nimport logo from \"./assets/bread.png\";\nimport background from \"./assets/background.jpg\";\n\nexport default function App(): ReactElement {\n  const [basicSelected, setBasicSelected] = React.useState(true);\n  const [loading, setLoading] = React.useState(false);\n  const [data, setData] = useState<any>(null);\n\n  const startLoading = () => setLoading(true);\n  const endLoading = () => setLoading(false);\n\n  const setURLs = (data: any) => setData(data);\n\n  if (!!data) {\n    return <Result data={data} />;\n  }\n\n  // className: PropTypes.string,\n  //   url: PropTypes.string,\n  //   width: PropTypes.number,\n  //   height: PropTypes.number,\n  //   backgroundColor: PropTypes.string,\n  //   modelColor: PropTypes.string,\n  //   rotate: PropTypes.bool,\n  //   orbitControls: PropTypes.bool,\n  //   cameraX: PropTypes.number,\n  //   cameraY: PropTypes.number,\n  //   cameraZ: PropTypes.number,\n  //   lights: PropTypes.array,\n  //   lightColor: PropTypes.string,\n  //   rotationSpeeds: PropTypes.arrayOf(PropTypes.number),\n  //   model: PropTypes.oneOfType([\n  //     PropTypes.string,\n  //     PropTypes.instanceOf(ArrayBuffer)\n  //   ]).isRequired\n  // };\n\n  if (loading) {\n    return (\n      <div className=\"screen-center\">\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"app\">\n        <img src={background} alt=\"\" className=\"bg\" />\n        <h1>\n          {\" \"}\n          <img src={logo} className=\"logo\" alt=\"BREAD\" /> BioREActorDesigner\n          (BREAD)\n        </h1>\n        <div className=\"switch\">\n          <span\n            className={cn({ active: basicSelected })}\n            onClick={() => setBasicSelected(true)}\n          >\n            Basic\n          </span>\n          <span\n            className={cn({ active: !basicSelected })}\n            onClick={() => setBasicSelected(false)}\n          >\n            Advanced\n          </span>\n        </div>\n        <main>\n          {basicSelected ? (\n            <Basic\n              startLoading={startLoading}\n              endLoading={endLoading}\n              setURLs={setURLs}\n            />\n          ) : (\n            <Advanced\n              startLoading={startLoading}\n              endLoading={endLoading}\n              setURLs={setURLs}\n            />\n          )}\n        </main>\n        <div className={basicSelected ? \"bottom bottom-basic\" : \"bottom\"}>\n          Give us feedback{\" \"}\n          <a href=\"https://forms.gle/suVr6dtJ3xkXKJkp7\">here</a>\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction Basic({ startLoading, endLoading, setURLs }: any): ReactElement {\n  const Volume = useInputState();\n  const H_D = useInputState();\n\n  const generateBasicModel = async () => {\n    startLoading();\n\n    try {\n      const res = await axios.post(`http://64.227.177.61:8000/basic`, {\n        volume: Volume.value.toString(),\n        h_d: H_D.value.toString(),\n      });\n      setURLs(res.data.files);\n      endLoading();\n    } catch (err) {\n      endLoading();\n    }\n  };\n\n  // TotalVolume = int(10/8*Volume)*pow(10,6)\n  //   Diameter=pow(24*TotalVolume/(5*math.pi),1/3)\n  //   Height = Diameter*H_D\n\n  return (\n    <div className=\"basic\">\n      <h2>Basic</h2>\n      <Input state={Volume} title=\"Volume (Litres)\" />\n      <Input state={H_D} title=\"Height / Diameter Ratio\" />\n      <div onClick={generateBasicModel} className=\"btn\">\n        Generate\n      </div>\n    </div>\n  );\n}\n\nfunction Advanced({ startLoading, endLoading, setURLs }: any): ReactElement {\n  const Volume = useInputState();\n  const H_D = useInputState();\n  const BaffleLen = useInputState();\n  const BaffleWid = useInputState();\n  const Thickness = useInputState();\n  const BaseThickness = useInputState();\n  const ShaftDiameter = useInputState();\n  const Baffle_count = useInputState();\n  const Hub_Diameter = useInputState();\n  const Hub_Height = useInputState();\n  const Blade_Length = useInputState();\n  const Blade_Angle = useInputState();\n  const Blade_Thickness = useInputState();\n  const Blade_Count = useInputState();\n  const Num_Imp = useInputState();\n\n  const generateAdvancedModel = async () => {\n    startLoading();\n    try {\n      const res = await axios.post(`http://64.227.177.61:8000/advanced`, {\n        volume: Volume.value,\n        h_d: H_D.value,\n        baffleLen: BaffleLen.value,\n        baffleWid: BaffleWid.value,\n        thickness: Thickness.value,\n        baseThickness: BaseThickness.value,\n        shaftDiameter: ShaftDiameter.value,\n        baffle_count: Baffle_count.value,\n        hub_diameter: Hub_Diameter.value,\n        hub_height: Hub_Height.value,\n        blade_length: Blade_Length.value,\n        blade_angle: Blade_Angle.value,\n        blade_thickness: Blade_Thickness.value,\n        blade_count: Blade_Count.value,\n        mum_imp: Num_Imp.value,\n      });\n      setURLs(res.data.files);\n      endLoading();\n    } catch (err) {\n      endLoading();\n    }\n  };\n\n  return (\n    <div className=\"advanced\">\n      <h2>Advanced</h2>\n      <div className=\"flex\">\n        <Input state={Volume} title=\"Volume (Litres)\" />\n        <Input state={H_D} title=\"Height / Diameter Ratio\" />\n      </div>\n      <div className=\"flex\">\n        <Input state={BaffleLen} title=\"Baffle Length (cm)\" />\n        <Input state={BaffleWid} title=\"Baffle Width (cm)\" />\n        <Input state={Baffle_count} title=\"Baffle Count\" />\n      </div>\n      <div className=\"flex\">\n        <Input state={Thickness} title=\"Thickness (cm)\" />\n        <Input state={BaseThickness} title=\"Base Thickness (cm)\" />\n        <Input state={ShaftDiameter} title=\"Shaft Diameter (cm)\" />\n      </div>\n      <div className=\"flex\">\n        <Input state={Hub_Diameter} title=\"Hub Diameter (cm)\" />\n        <Input state={Hub_Height} title=\"Hub Height (cm)\" />\n      </div>\n      <section>\n        <h3>Type of Impeller</h3>\n        <label htmlFor=\"pitch\">\n          {\" \"}\n          <input id=\"pitch\" type=\"checkbox\" />\n          <span>Pitch Blade</span>\n        </label>\n\n        <label htmlFor=\"rushton\">\n          {\" \"}\n          <input id=\"rushton\" type=\"checkbox\" />\n          <span>Rushton Blade</span>\n        </label>\n      </section>\n      <Input state={Num_Imp} title=\"Number of Impellers\" />\n      <div className=\"flex\">\n        <Input state={Blade_Length} title=\"Blade Length (cm)\" />\n        <Input state={Blade_Angle} title=\"Blade Angle (deg)\" />\n        <Input state={Blade_Thickness} title=\"Blade Thickness (cm)\" />\n        <Input state={Blade_Count} title=\"Blade Count\" />\n      </div>\n      <div onClick={generateAdvancedModel} className=\"btn\">\n        Generate\n      </div>\n    </div>\n  );\n}\n\nfunction Result({ data }: any): ReactElement {\n  return (\n    <div className=\"result\">\n      <div className=\"buttons\">\n        <a href={\"http://64.227.177.61/\"} className=\"download\">\n          Go back\n        </a>\n        <a\n          href={\"http://64.227.177.61:8000/\" + data[0]}\n          download\n          className=\"download\"\n        >\n          Download STL\n        </a>\n        <a\n          href={\"http://64.227.177.61:8000/\" + data[1]}\n          download\n          className=\"download\"\n        >\n          Download Step\n        </a>\n      </div>\n      <div className=\"viewer\">\n        <STLViewer\n          width={500}\n          height={500}\n          modelColor=\"#ff0000\"\n          backgroundColor=\"#BDD5CB\"\n          rotate={true}\n          orbitControls={true}\n          model={\"http://64.227.177.61:8000/\" + data[0]}\n        />\n      </div>\n      <h3>Hold cursor to move!</h3>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}